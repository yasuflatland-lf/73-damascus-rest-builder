components:
  schemas:
    DateTime:
      description: Contains Date Time data.
      properties:
        data:
          type: string
        format:
          type: string
      required: 
        - data
        - format
      type: object
    SampleSBApp:
      description: Contains information about an SampleSBApp.
      properties:
        sampleSbId:
          description: The primary key for the SampleSB entity.
          type: integer
          format: int64
          readOnly: true
        title:
          description: SampleSBApp's title.
          type: string
        samplesbBooleanStat:
          description: SampleSBApp's samplesbBooleanStat.
          type: boolean
        samplesbDateTime:
          description: SampleSBApp's samplesbDateTime.
          type: string          
        samplesbDocumentLibrary:
          description: SampleSBApp's samplesbDocumentLibrary.
          type: string
        samplesbDouble:
          description: SampleSBApp's samplesbDouble.
          type: number
          format: double
        samplesbInteger:
          description: SampleSBApp's samplesbInteger.
          type: integer
          format: int32
        samplesbRichText:
          description: SampleSBApp's samplesbRichText.
          type: string
        samplesbText:
          description: SampleSBApp's samplesbText.
          type: string
        samplesbTitleName:
          description: SampleSBApp's samplesbTitleName.
          type: string
        samplesbSummaryName:
          description: SampleSBApp's samplesbSummaryName.
          type: string
      required: 
        - title
      type: object

openapi: 3.0.1
info:
  title: "Headless SampleSB"
  version: v1.0
  description: "API for accessing SampleSB details."
paths:
  "/samplesbs":
    get:
      operationId: getSamplesbsPage
      tags: ["SampleSBApp"]
      description: Retrieve the list of SampleSBs. Results can be paginated, filtered, searched and sorted.
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            format: int64
            type: integer
        - in: query
          name: pageSize
          schema:
            format: int64
            type: integer
        - in: query
          name: keywords
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SampleSBApp"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SampleSBApp"
                type: array
    post:
      operationId: postSamplesb
      tags: ["SampleSBApp"]
      description: Create a new SampleSB entity.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SampleSBApp"
          application/xml:
            schema:
              $ref: "#/components/schemas/SampleSBApp"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SampleSBApp"
            application/xml:
              schema:
                $ref: "#/components/schemas/SampleSBApp"
  "/samplesbs/{sampleSbId}":
    get:
      operationId: getSamplesbSampleSb
      tags: ["SampleSBApp"]
      description: Retrieves the SampleSB via its ID
      parameters: 
        - name: entityId
          in: path
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SampleSBApp"
            application/xml:
              schema:
                $ref: "#/components/schemas/SampleSBApp"
    put:
      operationId: putSamplesbSampleSb
      tags: ["SampleSBApp"]
      description: Updates and overwrites existing SampleSB entity.
      parameters: 
        - name: entityId
          in: path
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SampleSBApp"
          application/xml:
            schema:
              $ref: "#/components/schemas/SampleSBApp"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SampleSBApp"
            application/xml:
              schema:
                $ref: "#/components/schemas/SampleSBApp"   
    delete:
      operationId: deleteSamplesbSampleSb
      tags: ["SampleSBApp"]
      description: Deletes the target office entity.
      parameters: 
        - name: entityId
          in: path
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          description: ""
          content:
            application/json: {} 
