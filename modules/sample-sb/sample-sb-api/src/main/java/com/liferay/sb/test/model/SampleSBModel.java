/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.sb.test.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.MVCCModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.model.TrashedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the SampleSB service. Represents a row in the &quot;SampleSB_SampleSB&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.sb.test.model.impl.SampleSBModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.sb.test.model.impl.SampleSBImpl</code>.
 * </p>
 *
 * @author "yasuflatland"
 * @see SampleSB
 * @generated
 */
@ProviderType
public interface SampleSBModel
	extends BaseModel<SampleSB>, GroupedModel, MVCCModel, ShardedModel,
			StagedAuditedModel, TrashedModel, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a sample sb model instance should use the {@link SampleSB} interface instead.
	 */

	/**
	 * Returns the primary key of this sample sb.
	 *
	 * @return the primary key of this sample sb
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this sample sb.
	 *
	 * @param primaryKey the primary key of this sample sb
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the mvcc version of this sample sb.
	 *
	 * @return the mvcc version of this sample sb
	 */
	@Override
	public long getMvccVersion();

	/**
	 * Sets the mvcc version of this sample sb.
	 *
	 * @param mvccVersion the mvcc version of this sample sb
	 */
	@Override
	public void setMvccVersion(long mvccVersion);

	/**
	 * Returns the uuid of this sample sb.
	 *
	 * @return the uuid of this sample sb
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this sample sb.
	 *
	 * @param uuid the uuid of this sample sb
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the samplesb ID of this sample sb.
	 *
	 * @return the samplesb ID of this sample sb
	 */
	public long getSamplesbId();

	/**
	 * Sets the samplesb ID of this sample sb.
	 *
	 * @param samplesbId the samplesb ID of this sample sb
	 */
	public void setSamplesbId(long samplesbId);

	/**
	 * Returns the title of this sample sb.
	 *
	 * @return the title of this sample sb
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this sample sb.
	 *
	 * @param title the title of this sample sb
	 */
	public void setTitle(String title);

	/**
	 * Returns the samplesb boolean stat of this sample sb.
	 *
	 * @return the samplesb boolean stat of this sample sb
	 */
	public boolean getSamplesbBooleanStat();

	/**
	 * Returns <code>true</code> if this sample sb is samplesb boolean stat.
	 *
	 * @return <code>true</code> if this sample sb is samplesb boolean stat; <code>false</code> otherwise
	 */
	public boolean isSamplesbBooleanStat();

	/**
	 * Sets whether this sample sb is samplesb boolean stat.
	 *
	 * @param samplesbBooleanStat the samplesb boolean stat of this sample sb
	 */
	public void setSamplesbBooleanStat(boolean samplesbBooleanStat);

	/**
	 * Returns the samplesb date time of this sample sb.
	 *
	 * @return the samplesb date time of this sample sb
	 */
	public Date getSamplesbDateTime();

	/**
	 * Sets the samplesb date time of this sample sb.
	 *
	 * @param samplesbDateTime the samplesb date time of this sample sb
	 */
	public void setSamplesbDateTime(Date samplesbDateTime);

	/**
	 * Returns the samplesb document library of this sample sb.
	 *
	 * @return the samplesb document library of this sample sb
	 */
	@AutoEscape
	public String getSamplesbDocumentLibrary();

	/**
	 * Sets the samplesb document library of this sample sb.
	 *
	 * @param samplesbDocumentLibrary the samplesb document library of this sample sb
	 */
	public void setSamplesbDocumentLibrary(String samplesbDocumentLibrary);

	/**
	 * Returns the samplesb double of this sample sb.
	 *
	 * @return the samplesb double of this sample sb
	 */
	public double getSamplesbDouble();

	/**
	 * Sets the samplesb double of this sample sb.
	 *
	 * @param samplesbDouble the samplesb double of this sample sb
	 */
	public void setSamplesbDouble(double samplesbDouble);

	/**
	 * Returns the samplesb integer of this sample sb.
	 *
	 * @return the samplesb integer of this sample sb
	 */
	public int getSamplesbInteger();

	/**
	 * Sets the samplesb integer of this sample sb.
	 *
	 * @param samplesbInteger the samplesb integer of this sample sb
	 */
	public void setSamplesbInteger(int samplesbInteger);

	/**
	 * Returns the samplesb rich text of this sample sb.
	 *
	 * @return the samplesb rich text of this sample sb
	 */
	@AutoEscape
	public String getSamplesbRichText();

	/**
	 * Sets the samplesb rich text of this sample sb.
	 *
	 * @param samplesbRichText the samplesb rich text of this sample sb
	 */
	public void setSamplesbRichText(String samplesbRichText);

	/**
	 * Returns the samplesb text of this sample sb.
	 *
	 * @return the samplesb text of this sample sb
	 */
	@AutoEscape
	public String getSamplesbText();

	/**
	 * Sets the samplesb text of this sample sb.
	 *
	 * @param samplesbText the samplesb text of this sample sb
	 */
	public void setSamplesbText(String samplesbText);

	/**
	 * Returns the group ID of this sample sb.
	 *
	 * @return the group ID of this sample sb
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this sample sb.
	 *
	 * @param groupId the group ID of this sample sb
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this sample sb.
	 *
	 * @return the company ID of this sample sb
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this sample sb.
	 *
	 * @param companyId the company ID of this sample sb
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this sample sb.
	 *
	 * @return the user ID of this sample sb
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this sample sb.
	 *
	 * @param userId the user ID of this sample sb
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this sample sb.
	 *
	 * @return the user uuid of this sample sb
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this sample sb.
	 *
	 * @param userUuid the user uuid of this sample sb
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this sample sb.
	 *
	 * @return the user name of this sample sb
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this sample sb.
	 *
	 * @param userName the user name of this sample sb
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this sample sb.
	 *
	 * @return the create date of this sample sb
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this sample sb.
	 *
	 * @param createDate the create date of this sample sb
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this sample sb.
	 *
	 * @return the modified date of this sample sb
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this sample sb.
	 *
	 * @param modifiedDate the modified date of this sample sb
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the url title of this sample sb.
	 *
	 * @return the url title of this sample sb
	 */
	@AutoEscape
	public String getUrlTitle();

	/**
	 * Sets the url title of this sample sb.
	 *
	 * @param urlTitle the url title of this sample sb
	 */
	public void setUrlTitle(String urlTitle);

	/**
	 * Returns the samplesb title name of this sample sb.
	 *
	 * @return the samplesb title name of this sample sb
	 */
	@AutoEscape
	public String getSamplesbTitleName();

	/**
	 * Sets the samplesb title name of this sample sb.
	 *
	 * @param samplesbTitleName the samplesb title name of this sample sb
	 */
	public void setSamplesbTitleName(String samplesbTitleName);

	/**
	 * Returns the samplesb summary name of this sample sb.
	 *
	 * @return the samplesb summary name of this sample sb
	 */
	@AutoEscape
	public String getSamplesbSummaryName();

	/**
	 * Sets the samplesb summary name of this sample sb.
	 *
	 * @param samplesbSummaryName the samplesb summary name of this sample sb
	 */
	public void setSamplesbSummaryName(String samplesbSummaryName);

	/**
	 * Returns the status of this sample sb.
	 *
	 * @return the status of this sample sb
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this sample sb.
	 *
	 * @param status the status of this sample sb
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this sample sb.
	 *
	 * @return the status by user ID of this sample sb
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this sample sb.
	 *
	 * @param statusByUserId the status by user ID of this sample sb
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this sample sb.
	 *
	 * @return the status by user uuid of this sample sb
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this sample sb.
	 *
	 * @param statusByUserUuid the status by user uuid of this sample sb
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this sample sb.
	 *
	 * @return the status by user name of this sample sb
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this sample sb.
	 *
	 * @param statusByUserName the status by user name of this sample sb
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this sample sb.
	 *
	 * @return the status date of this sample sb
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this sample sb.
	 *
	 * @param statusDate the status date of this sample sb
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the trash entry created when this sample sb was moved to the Recycle Bin. The trash entry may belong to one of the ancestors of this sample sb.
	 *
	 * @return the trash entry created when this sample sb was moved to the Recycle Bin
	 */
	@Override
	public com.liferay.trash.kernel.model.TrashEntry getTrashEntry()
		throws PortalException;

	/**
	 * Returns the class primary key of the trash entry for this sample sb.
	 *
	 * @return the class primary key of the trash entry for this sample sb
	 */
	@Override
	public long getTrashEntryClassPK();

	/**
	 * Returns the trash handler for this sample sb.
	 *
	 * @return the trash handler for this sample sb
	 * @deprecated As of Judson (7.1.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public com.liferay.portal.kernel.trash.TrashHandler getTrashHandler();

	/**
	 * Returns <code>true</code> if this sample sb is in the Recycle Bin.
	 *
	 * @return <code>true</code> if this sample sb is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrash();

	/**
	 * Returns <code>true</code> if the parent of this sample sb is in the Recycle Bin.
	 *
	 * @return <code>true</code> if the parent of this sample sb is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrashContainer();

	@Override
	public boolean isInTrashExplicitly();

	@Override
	public boolean isInTrashImplicitly();

	/**
	 * Returns <code>true</code> if this sample sb is approved.
	 *
	 * @return <code>true</code> if this sample sb is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this sample sb is denied.
	 *
	 * @return <code>true</code> if this sample sb is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this sample sb is a draft.
	 *
	 * @return <code>true</code> if this sample sb is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this sample sb is expired.
	 *
	 * @return <code>true</code> if this sample sb is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this sample sb is inactive.
	 *
	 * @return <code>true</code> if this sample sb is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this sample sb is incomplete.
	 *
	 * @return <code>true</code> if this sample sb is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this sample sb is pending.
	 *
	 * @return <code>true</code> if this sample sb is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this sample sb is scheduled.
	 *
	 * @return <code>true</code> if this sample sb is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

}